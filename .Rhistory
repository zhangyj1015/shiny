drv <- dbDriver("PostgreSQL")
concancer <- dbConnect(drv, dbname="cancer", user="zhangyj", password = "zhangyj")
conpur <- dbConnect(drv, dbname="pur", user="zhangyj", password = "zhangyj")
dbListConnections(drv)
dbGetInfo(drv)
summary(con)
rs <- dbSendQuery(concancer,"select * from county")
rs <- dbSendQuery(concancer,"select * from cancer.county")
rs <- dbSendQuery(concancer,"select * from cancer.county")
rs <- dbSendQuery(concancer,"select * from cancer.county")
rs <- dbSendQuery(concancer,"select * from county")
concancer
rs <- dbSendQuery(concancer,"select * from cancer.county")
rs <- dbSendQuery(concancer,"select * from cancer.county")
rs
fetch(rs,n=-1)
s <-fetch(rs,n=-1)
s
s
? "fetch"
s <- fetch(rs,n=-1)
View(s)
View(s)
rs
?dbSendQuery
s <- dbfetch(rs,n=-1)
s <- dbFetch(rs,n=-1)
s
dbFetch(rs,n=-1)
fetch(rs,n=-1)
rs <- dbSendQuery(concancer,"select * from cancer.county")
dbFetch(rs,n=-1)
s <- dbFetch(rs,n=-1)
View(s)
s.county_id
? dbFetch
chunk <- dbFetch(rs,n=-1)
View(dataFetchEUR)
chunk <- dbFetch(rs,-1)
dbFetch(rs,-1)
rs <- dbSendQuery(concancer,"select * from cancer.county")
dbFetch(rs,-1)
s<-dbFetch(rs,-1)
dbFetch()
?dbFetch
c = data.frame()
c<-dbFetch(rs,-1)
rs <- dbSendQuery(concancer,"select * from cancer.county")
s = dbFetch(rs,-1)
s
s.county_id
s.county_cd
s[county_cd]
s["county_cd"]
s[1]
s["county_cd" >10]
s["county_cd" ]>10
s["county_cd" =10]
s["county_cd" ==10]
s["county_cd" ==52]
s$county_cd
s$county_cd >10
s(s$county_cd >10）
s(s$county_cd >10)
s[s$county_cd >10]
s[$county_cd >10]
s[county_cd >10]
s[county_cd ==10]
s$county_cd <10
s[s$county_cd <10]
subset(s$county_cd <10)
subset(s$county_cd <10)
hasfd
? abline
n <- 100; t <- rep(c(0, 1), c(n/2, n/2)); x <- c(runif(n/2), runif(n/2));
beta0 <- 0; beta1 <- 2; tau <- 1; sigma <- .2
y <- beta0 + x * beta1 + t * tau + rnorm(n, sd = sigma)
plot(x, y, type = "n", frame = FALSE)
points(x[1 : (n/2)], y[1 : (n/2)], pch = 21, col = "black", bg = "lightblue", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "salmon", cex = 2)
points(x[(n/2 + 1) : n], y[(n/2 + 1) : n], pch = 21, col = "black", bg = "black", cex = 2)
points(x[1 : n], y[1 : n], pch = 21, col = "black", bg = "black", cex = 2)
runif(n/2)
x
c(runif(n/2), runif(n/2))
c
t
？ rep
? rep
fit
fit <- lm(y ~ x + t)
fit
n <- 100; nosim <- 1000
x1 <- rnorm(n); x2 <- rnorm(n); x3 <- rnorm(n);
betas <- sapply(1 : nosim, function(i){
y <- x1 + rnorm(n, sd = .3)
c(coef(lm(y ~ x1))[2],
coef(lm(y ~ x1 + x2))[2],
coef(lm(y ~ x1 + x2 + x3))[2])
})
round(apply(betas, 1, sd), 5)
round(apply(betas,1,sd))
round(apply(betas,1,sd),5)
round(apply(betas,1,var),5)
round(apply(betas,1,sum),5)
round(apply(betas,1,sum),5)
?apply
coef(lm(y ~ x1))[2]
fit1 <- lm(Fertility ~ Agriculture, data = swiss)
fit3 <- update(fit, Fertility ~ Agriculture + Examination + Education)
fit5 <- update(fit, Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality)
anova(fit1, fit3, fit5)
fit3 <- update(fit, Fertility ~ Agriculture + Examination + Education,data=swiss)
fit5 <- update(fit, Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality,data=swiss)
anova(fit1, fit3, fit5)
? annova
? anova
? tapply
attach(InsectSprays)
count
boxplot(count ~ spray)
? boxplot
boxplot(count ~ spray)
attach(mtcars)
boxplot(mpg~am)
boxplot(mpg~cyl)
boxplot(count ~ spray)
library(ggplot2)
p <- qplot(hp, mpg, data=mtcars, shape=am, color=am,
facets=gear~cyl, main="Scatterplots of MPG vs. Horsepower",
xlab="Horsepower", ylab="Miles per Gallon")
# White background and black grid lines
p + theme_bw()
# Large brown bold italics labels
# and legend placed at top of plot
p + theme(axis.title=element_text(face="bold.italic",
size="12", color="brown"), legend.position="top")
library(ggplot2)
mtcars
p <- qplot(hp, mpg, data=mtcars, shape=am, color=am,
facets=gear~cyl, main="Scatterplots of MPG vs. Horsepower",
xlab="Horsepower", ylab="Miles per Gallon")
p + theme_bw()
p + theme(axis.title=element_text(face="bold.italic",
size="12", color="brown"), legend.position="top")
p + theme_bw()
p
# ggplot2 examples
library(ggplot2)
# create factors with value labels
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
mtcars$am <- factor(mtcars$am,levels=c(0,1),
labels=c("Automatic","Manual"))
mtcars$cyl <- factor(mtcars$cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
# Kernel density plots for mpg
# grouped by number of gears (indicated by color)
qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
# Scatterplot of mpg vs. hp for each combination of gears and cylinders
# in each facet, transmittion type is represented by shape and color
qplot(hp, mpg, data=mtcars, shape=am, color=am,
facets=gear~cyl, size=I(3),
xlab="Horsepower", ylab="Miles per Gallon")
# Separate regressions of mpg on weight for each number of cylinders
qplot(wt, mpg, data=mtcars, geom=c("point", "smooth"),
method="lm", formula=y~x, color=cyl,
main="Regression of MPG on Weight",
xlab="Weight", ylab="Miles per Gallon")
# Boxplots of mpg by number of gears
# observations (points) are overlayed and jittered
qplot(gear, mpg, data=mtcars, geom=c("boxplot", "jitter"),
fill=gear, main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon")
qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
# create factors with value labels
qplot(hp, mpg, data=mtcars, shape=am, color=am,
facets=gear~cyl, size=I(3),
xlab="Horsepower", ylab="Miles per Gallon")
qplot(wt, mpg, data=mtcars, geom=c("point", "smooth"),
method="lm", formula=y~x, color=cyl,
main="Regression of MPG on Weight",
xlab="Weight", ylab="Miles per Gallon")
qplot(gear, mpg, data=mtcars, geom=c("boxplot", "jitter"),
fill=gear, main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon")
mtcars
?theme_bw()
ggplot
?"ggplot"
library(ggplot2)
p <- qplot(hp, mpg, data=mtcars, shape=am, color=am,
facets=gear~cyl, main="Scatterplots of MPG vs. Horsepower",
xlab="Horsepower", ylab="Miles per Gallon")
# White background and black grid lines
p + theme_bw()
# Large brown bold italics labels
# and legend placed at top of plot
p + theme(axis.title=element_text(face="bold.italic",
size="12", color="brown"), legend.position="top")
library("RPostgreSQL", lib.loc="~/R/win-library/3.2")
drv <- dbDriver("PostgreSQL")
concancer <- dbConnect(drv, dbname="cancer", user="zhangyj", password = "zhangyj")
conpur <- dbConnect(drv, dbname="pur", user="zhangyj", password = "zhangyj")
dbListConnections(drv)
dbGetInfo(drv)
cancer = dbGetQuery(concancer,"select site from cancer.ca group by site order by site ASC ")
year_cancer = dbGetQuery(concancer,"select year from cancer.ca group by year order by year asc")
pesticide = dbGetQuery(conpur,"select distinct chem_code from pur.udc_year where chem_code =2997 or chem_code =5810 or chem_code =5972 or chem_code =1855 or chem_code =2301 or chem_code =5820 or chem_code =2275 or chem_code =2327")
year_pesticide = dbGetQuery(conpur,"select distinct year from pur.udc_year")
t
}
rsset <- dbGetQuery(concancer,paste("select * from cancer.rr_ci "))
rsset
y <- rnorm(500, mean=1)
y <- matrix(y,100,5)
y.means <- apply(y,2,mean)
y.sd <- apply(y,2,sd)
barx <- barplot(y.means, names.arg=1:5,ylim=c(0,1.5), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,y.means, 1.96*y.sd/10)
error.bar <- function(x, y, upper, lower=upper, length=0.1,...){
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=3, length=length, ...)
}
y <- rnorm(500, mean=1)
y <- matrix(y,100,5)
y.means <- apply(y,2,mean)
y.sd <- apply(y,2,sd)
barx <- barplot(y.means, names.arg=1:5,ylim=c(0,1.5), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,y.means, 1.96*y.sd/10)
y.means
rsset
barx <- barplot(rsset$rr3, names.arg=rsset$chem_code_pur,ylim=c(0,1.5), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,rsset$rr3, rsset$ci3u-rsset$rr3)
rsset <- dbGetQuery(concancer,paste("select * from cancer.rr_ci where chem_code_pur=2997"))
size="12", color="brown"), legend.position="top")
rsset <- dbGetQuery(concancer,paste("select * from cancer.rr_ci where chem_code_pur=2997"))
rsset
barx <- barplot(rsset$rr3, names.arg=rsset$chem_code_pur,ylim=c(0,1.5), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,rsset$rr3, rsset$ci3u-rsset$rr3)
barx <- barplot(rsset$rr3, names.arg=rsset$cancer,ylim=c(0,1.5), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,rsset$rr3, rsset$ci3u-rsset$rr3)
barx <- barplot(rsset$rr3, names.arg=rsset$cancer,ylim=c(0,20), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,rsset$rr3, rsset$ci3u-rsset$rr3)
barx <- barplot(rsset$rr3, names.arg=rsset$cancer,ylim=c(0,20), col="grey", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,rsset$rr3, rsset$ci3u-rsset$rr3)
barx <- barplot(rsset$rr3, names.arg=rsset$site_cancer,ylim=c(0,20), col="grey", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,rsset$rr3, rsset$ci3u-rsset$rr3)
rsset <- dbGetQuery(concancer,paste("select * from cancer.rr_ci where chem_code_pur=5810"))
barx <- barplot(rsset$rr3, names.arg=rsset$site_cancer,ylim=c(0,20), col="grey", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,rsset$rr3, rsset$ci3u-rsset$rr3)
rsset <- dbGetQuery(concancer,paste("select * from cancer.rr_ci where chem_code_pur=1855"))
barx <- barplot(rsset$rr3, names.arg=rsset$site_cancer,ylim=c(0,20), col="grey", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,rsset$rr3, rsset$ci3u-rsset$rr3)
rsset <- dbGetQuery(concancer,paste("select * from cancer.rr_ci where chem_code_pur=2301"))
barx <- barplot(rsset$rr3, names.arg=rsset$site_cancer,ylim=c(0,20), col="grey", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,rsset$rr3, rsset$ci3u-rsset$rr3)
rsset <- dbGetQuery(concancer,paste("select * from cancer.rr_ci where chem_code_pur=5820"))
barx <- barplot(rsset$rr3, names.arg=rsset$site_cancer,ylim=c(0,20), col="grey", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,rsset$rr3, rsset$ci3u-rsset$rr3)
rsset <- dbGetQuery(concancer,paste("select * from cancer.rr_ci where chem_code_pur=2275"))
barx <- barplot(rsset$rr3, names.arg=rsset$site_cancer,ylim=c(0,20), col="grey", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,rsset$rr3, rsset$ci3u-rsset$rr3)
rsset <- dbGetQuery(concancer,paste("select * from cancer.rr_ci where chem_code_pur=2275"))
barx <- barplot(rsset$rr3, names.arg=rsset$site_cancer,ylim=c(0,20), col="grey", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,rsset$rr3, rsset$ci3u-rsset$rr3)
rsset <- dbGetQuery(concancer,paste("select * from cancer.rr_ci where chem_code_pur=2327"))
barx <- barplot(rsset$rr3, names.arg=rsset$site_cancer,ylim=c(0,20), col="grey", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(barx,rsset$rr3, rsset$ci3u-rsset$rr3)
barx <- barplot(rsset$rr3, names.arg=rsset$site_cancer,ylim=c(0,20), col="grey", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
rsset <- dbGetQuery(concancer,paste("select * from cancer.regression_cancer_pur where chem_code_pur=2327"))
rsset$site_cancer
rsset <- dbGetQuery(concancer,paste("select * from cancer.rr_ci where chem_code_pur=2997"))
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
rsset <- dbGetQuery(concancer,paste("select * from cancer.regression_cancer_pur where chem_code_pur=2997"))
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
rsset1 <- dbGetQuery(concancer,paste("select * from cancer.regression_cancer_pur where chem_code_pur=5810"))
rsset <- dbGetQuery(concancer,paste("select * from cancer.regression_cancer_pur where chem_code_pur=2997"))
par(mfrow = c(2,1))
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
barx <- barplot(rsset1$cor, names.arg=rsset1$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
rsset <- dbGetQuery(concancer,paste("select * from cancer.regression_cancer_pur where chem_code_pur=2997"))
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
bary <- barplot(rsset$coefficient_1, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(bary,rsset$rr3, rsset$ci_up-rsset$coefficient_1)
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
bary <- barplot(rsset$coefficient_1, names.arg=rsset$site_cancer,ylim=c(-10,10), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(bary,rsset$rr3, rsset$ci_up-rsset$coefficient_1)
error.bar(bary,rsset$coefficient_1, rsset$ci_up-rsset$coefficient_1)
rsset <- dbGetQuery(concancer,paste("select * from cancer.regression_cancer_pur where chem_code_pur=5810"))
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
bary <- barplot(rsset$coefficient_1, names.arg=rsset$site_cancer,ylim=c(-10,10), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(bary,rsset$coefficient_1, rsset$ci_up-rsset$coefficient_1)
rsset <- dbGetQuery(concancer,paste("select * from cancer.regression_cancer_pur where chem_code_pur=5972"))
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
bary <- barplot(rsset$coefficient_1, names.arg=rsset$site_cancer,ylim=c(-10,10), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(bary,rsset$coefficient_1, rsset$ci_up-rsset$coefficient_1)
rsset <- dbGetQuery(concancer,paste("select * from cancer.regression_cancer_pur where chem_code_pur=5972"))
rsset
rsset <- dbGetQuery(concancer,paste("select * from cancer.regression_cancer_pur where chem_code_pur=1855"))
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
bary <- barplot(rsset$coefficient_1, names.arg=rsset$site_cancer,ylim=c(-10,10), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(bary,rsset$coefficient_1, rsset$ci_up-rsset$coefficient_1)
rsset <- dbGetQuery(concancer,paste("select * from cancer.regression_cancer_pur where chem_code_pur=2301"))
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
bary <- barplot(rsset$coefficient_1, names.arg=rsset$site_cancer,ylim=c(-10,10), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(bary,rsset$coefficient_1, rsset$ci_up-rsset$coefficient_1)
rsset <- dbGetQuery(concancer,paste("select * from cancer.regression_cancer_pur where chem_code_pur=2301"))
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
bary <- barplot(rsset$coefficient_1, names.arg=rsset$site_cancer,ylim=c(-10,10), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(bary,rsset$coefficient_1, rsset$ci_up-rsset$coefficient_1)
rsset <- dbGetQuery(concancer,paste("select * from cancer.regression_cancer_pur where chem_code_pur=5820"))
rsset <- dbGetQuery(concancer,paste("select * from cancer.regression_cancer_pur where chem_code_pur=2327"))
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
bary <- barplot(rsset$coefficient_1, names.arg=rsset$site_cancer,ylim=c(-10,10), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(bary,rsset$coefficient_1, rsset$ci_up-rsset$coefficient_1)
rsset
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
barx <- barplot(rsset1$cor, names.arg=rsset1$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
rsset
qplot(data = rsset,x=coefficient_1)
qplot(data = rsset,x=coefficient_1,main="1")
qplot(data = rsset,x=coefficient_1,binwidth=100,main="1")
rsset$coefficient_1
qplot(data = rsset,x=coefficient_1,binwidth=10,main="1")
?qplot
qplot(data = rsset,y=coefficient_1,binwidth=10,main="1")
qplot(data = rsset,y=coefficient_1,main="1")
qplot(data = rsset,y=coefficient_1,main="1")
qplot(data = rsset,y=coefficient_1,main="1")
qplot
?qplot
qplot(data = rsset,x=coefficient_1,main="1")
qplot(data = rsset,y=coefficient_1,main="1")
?qplot
qplot(data = rsset,y=coefficient_1,geom = bar,main="1")
qplot(data = rsset,y=coefficient_1,geom = 'bar',main="1")
qplot(data = rsset,x=coefficient_1,geom ="bar",main="1")
qplot(data = rsset,x="boxplot",geom ="bar",main="1")
qplot(data = rsset,x="line",geom ="bar",main="1")
qplot(data = rsset,y="line",geom ="bar",main="1")
qplot(data = rsset,y="line",geom ="bar",main="1")
qplot(data = rsset,x="line",geom ="bar",main="1")
qplot(data = rsset,x=coefficient_1,geom ="bar",main="1")
qplot(data = rsset,x=coefficient_1,geom ="line",main="1")
qplot(data = rsset,x=coefficient_1,geom ="bar",main="1")
?qplot
qplot(data = rsset,x=coefficient_1,geom =c("bar"),main="1")
qplot(data = rsset,x=coefficient_1,geom =c("bar"),main="1",fill="gear")
qplot(gear, mpg, data=mtcars, geom=c("boxplot", "jitter"),fill=gear, main="Mileage by Gear Number",xlab="", ylab="Miles per Gallon")
qplot( mpg, data=mtcars, geom=c("boxplot", "jitter"),fill=gear, main="Mileage by Gear Number",xlab="", ylab="Miles per Gallon")
qplot( mpg, data=mtcars, geom=c("boxplot"),fill=gear, main="Mileage by Gear Number",xlab="", ylab="Miles per Gallon")
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
qplot( mpg, data=mtcars, geom=c("boxplot"),fill=gear, main="Mileage by Gear Number",xlab="", ylab="Miles per Gallon")
qplot(gear, mpg, data=mtcars, geom=c("boxplot"),fill=gear, main="Mileage by Gear Number",xlab="", ylab="Miles per Gallon")
, "jitter"
qplot(gear, mpg, data=mtcars, geom=c("boxplot", "jitter"),fill=gear, main="Mileage by Gear Number",xlab="", ylab="Miles per Gallon")
qplot(gear, mpg, data=mtcars, geom=c("boxplot"),fill=gear, main="Mileage by Gear Number",xlab="", ylab="Miles per Gallon")
qplot(gear, mpg, data=mtcars, geom=c("bar"),fill=gear, main="Mileage by Gear Number",xlab="", ylab="Miles per Gallon")
qplot(data = rsset,x=coefficient_1,geom =c("bar"),main="1",fill="gear")
qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
qplot(gear, mpg, data=mtcars, geom=c("boxplot", "jitter"),
fill=gear, main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon")
p <- qplot(hp, mpg, data=mtcars, shape=am, color=am,
facets=gear~cyl, main="Scatterplots of MPG vs. Horsepower",
xlab="Horsepower", ylab="Miles per Gallon")
p + theme_bw()
p + theme(axis.title=element_text(face="bold.italic",
size="12", color="brown"), legend.position="top")
mpg
p <- qplot(hp, mpg, data=mtcars, shape=am, color=am,
facets=gear~cyl, main="Scatterplots of MPG vs. Horsepower",
xlab="Horsepower", ylab="Miles per Gallon")
a <- ggplot(mpg, aes(hwy))
a + geom_area(stat = "bin")
a <- ggplot(mpg, aes(hwy))
+ geom_area(stat = "bin")
a <- ggplot(mpg, aes(hwy))
+ geom_area(stat = "bin")
+theme_bw()
?theme_bw
a <- ggplot(mpg, aes(hwy))
a+ geom_area(stat = "bin")
a <- ggplot(mpg, aes(hwy))
+ geom_area(stat = "bin")
+theme_bw()
# create factors with value labels
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
mtcars$am <- factor(mtcars$am,levels=c(0,1),
labels=c("Automatic","Manual"))
ggplot(mpg, aes(hwy))
+ geom_area(stat = "bin")
+theme_bw()
ggplot(mpg, aes(hwy))
+ geom_area(stat = "bin")
ggplot(mpg, aes(hwy))+ geom_area(stat = "bin")
ggplot(mpg, aes(hwy))+ geom_bar()
b <- ggplot(mpg, aes(fl))
n <- b + geom_bar(aes(fill = fl))
ggplot(mpg, aes(hwy))+ geom_bar()
b <- ggplot(mpg, aes(fl))
n <- b + geom_bar(aes(fill = fl))
n + scale_fill_manual(
values = c("skyblue", "royalblue", "blue", "navy"),
limits = c("d", "e", "p", "r"), breaks =c("d", "e", "p", "r"),
name = "fuel", labels = c("D", "E", "P", "R"))
b <- ggplot(mpg, aes(fl))
n <- b + geom_bar(aes(fill = fl))
b <- ggplot(mpg, aes(fl))
b + geom_bar(aes(fill = fl))
b <- ggplot(mpg, aes(fl))
b + geom_bar(aes(fill = fl))
b <- ggplot(mpg, aes(fl))
b + geom_bar(aes(fill = fl))
b <- ggplot(mpg, aes(fl))
b + geom_bar(aes(fill = fl))
b <- ggplot(mpg, aes(fl))
b + geom_bar(aes(fill = fl))
)
ggplot(mpg, aes(cty, hwy))
f <- ggplot(mpg, aes(cty, hwy))
f+geom_smooth(model = lm)
f <- ggplot(mpg, aes(cty, hwy))
f+geom_smooth(model = x)
f+geom_smooth(model = lm)
f <- ggplot(mpg, aes(cty, hwy))
f+geom_smooth(model = lm)
f+geom_smooth(model = x)
seals$z <- with(seals, sqrt(delta_long^2 + delta_lat^2))
m <- ggplot(seals, aes(long, lat))
m + geom_raster(aes(fill = z), hjust=0.5,
vjust=0.5, interpolate=FALSE)
seals$z <- with(seals, sqrt(delta_long^2 + delta_lat^2))
m <- ggplot(seals, aes(long, lat))
m + geom_tile(aes(fill = z))
t <- ggplot(mpg, aes(cty, hwy)) + geom_point()
t + facet_grid(. ~ fl)
t <- ggplot(mpg, aes(cty, hwy)) + geom_point()
t + facet_grid(year ~ .)
t <- ggplot(rsset, aes(coefficient_1)) + geom_bar()
t + facet_grid(site_cancer ~ .)
ggplot(rsset, aes(coefficient_1)) + geom_bar()
ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar()
ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_dotplot()
ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar()
ggplot(rsset, aes(site_cancer,coefficient_1)) + barplot()
ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar()
t <-ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar()
t + facet_grid(c(1,2) ~ .)
t <-ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar()
facet_grid(c(1,2) ~ .)
ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar()
facet_grid(c(1,2) ~ .)
ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar(stat = "identity")
par(mfrow = c(2,1))
ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar(stat = "identity")
qplot(data = rsset,x=coefficient_1,geom =c("bar"),main="1",fill="gear")
par(mfrow = c(2,1))
qplot(data = rsset,x=coefficient_1,geom =c("bar"),main="1",fill="gear")
qplot(gear, mpg, data=mtcars, geom=c("bar"),fill=gear, main="Mileage by Gear Number",xlab="", ylab="Miles per Gallon")
barx <- barplot(rsset$cor, names.arg=rsset$site_cancer,ylim=c(-1,1), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
bary <- barplot(rsset$coefficient_1, names.arg=rsset$site_cancer,ylim=c(-10,10), col="blue", axis.lty=1, xlab="Replicates", ylab="Value (arbitrary units)")
error.bar(bary,rsset$coefficient_1, rsset$ci_up-rsset$coefficient_1)
ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar(stat = "identity")
p1<-ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar(stat = "identity")
p2<-ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar(stat = "identity")
p3<-ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar(stat = "identity")
p4<-ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar(stat = "identity")
multiplot(p1, p2, p3, p4, cols=2)
?multiplot
install.packages("rmisc")
library("ggplot2", lib.loc="~/R/win-library/3.2")
install.packages("Rmisc")
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("Rmisc", lib.loc="~/R/win-library/3.2")
p1<-ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar(stat = "identity")
p2<-ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar(stat = "identity")
p3<-ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar(stat = "identity")
p4<-ggplot(rsset, aes(site_cancer,coefficient_1)) + geom_bar(stat = "identity")
multiplot(p1, p2, p3, p4, cols=2)
install.packages("rCharts")
library(rCharts)
getwd()
setwd("C:/Users/yanjun/OneDrive/class/Developing Data Products/www")
library("shiny", lib.loc="~/R/win-library/3.2")
library("UsingR", lib.loc="~/R/win-library/3.2")
runApp()
detach("package:lattice", unload=TRUE)
detach("package:survival", unload=TRUE)
library("shiny", lib.loc="~/R/win-library/3.2")
remove.packages("shiny", lib="~/R/win-library/3.2")
install.packages("shiny")
library("shiny", lib.loc="~/R/win-library/3.2")
remove.packages("shiny", lib="~/R/win-library/3.2")
shiny
install.packages("shiny")
library("shiny", lib.loc="~/R/win-library/3.2")
library("shiny", lib.loc="~/R/win-library/3.2")
detach("package:shiny", unload=TRUE)
library("shiny", lib.loc="~/R/win-library/3.2")
detach("package:shiny", unload=TRUE)
library("shiny", lib.loc="~/R/win-library/3.2")
detach("package:shiny", unload=TRUE)
